#!/bin/bash

# Trap the INT signal (ctrl-c, for example)
trap trapint 2

function trapint {
  echo
  echo
  echo "$(basename "$0") SIGINT received"
  cleanup
}

function cleanup {
  echo "Cleaning up..."
  rm "$HOME/running/$script_name.pid"
  echo "Bye."
  echo
  exit 0
}

function save_pid {
  script_name=$(basename "$0")
  if [ ! -d "$HOME/running/" ]; then
    mkdir "$HOME/running/"
  fi
  
  if [ -f "$HOME/running/$script_name.pid" ]; then
    echo "$script_name is already running ($HOME/running/$script_name.pid)"
    exit 1
  else
    echo $$ > "$HOME/running/$script_name.pid"
  fi
}

save_pid

# Absolute path to this script, e.g. /home/user/bin/foo.sh
script=$(readlink -f "$0")
# Absolute path this script is in, thus /home/user/bin
script_path=$(dirname "$script")

if [ -f "$1" ]; then
  search_root=$(dirname "$1")
else
  search_root="$1"
fi

find "$search_root" -type f -name '*.pdf' | {
  while read -r pdf_path; do
    
    keywords=$(keywords run ~/src/RailroadKeywords/pattern "$pdf_path")
    # if [ ! -z "$keywords" ]; then
      echo "$pdf_path"
      keywords=${keywords//Baureihe/BR}
      keywords=$(echo "$keywords" | sort | uniq | tr '\n' ',' | sed -e 's/^,//g' | sed -e 's/,$//g' | sed -e 's/,{2,}//')
      # keywords=$(echo "$keywords" | sort | uniq | sed -e 's/\n/, /' | sed -e 's/, $//')
      # echo "$keywords"
      
      # old_keywords=$(exiftool -S -Subject "$pdf_path" | grep "Subject" | awk '{sub(/[^ ]+ /, ""); print $0}')
      
      # if [ "$old_keywords" == "$keywords" ]; then
      #   echo "Keine Aktualisierung der Schlüsselwörter nötig."
      # else
      #   ebook-meta "$pdf_path" --tags="$keywords"
      #   # Refresh md5 after a pdf update
      working_path=$(dirname "$pdf_path")
      pdf_filename=$(basename "$pdf_path")
      pdf_filename="${pdf_filename%.*}"
      #   md5=$(md5sum "$pdf_path"  | gawk  -F ' ' '{print $1}')
      #   echo "$md5" > "$working_path/$pdf_filename.md5"
      metadata_path="$working_path/metadata.opf"
      if [ ! -f "$metadata_path" ]; then
        echo "$metadata_path not found" 1>&2
      else
        


        calibre_id=$(xpath -q -e "//package/metadata/dc:identifier[@id='calibre_id']/text()" "$metadata_path")
        false_positive_pattern=$(grep "^$calibre_id=" "$script_path/false_positive/by_calibre_id.pattern" | gawk  -F "$calibre_id=" '{print $2}')
        # echo "$calibre_id"
        false_positive_pattern=$(echo "$false_positive_pattern" | sed -e 's/(/\\(/g' | sed -e 's/)/\\)/g' | sed -e 's/{/\\{/g' | sed -e 's/}/\\}/g' | sed -e 's/|/\\|/g')
        
        # echo "$false_positive_pattern"
        
        if [ ! -z "$false_positive_pattern" ]; then
          keywords=$(echo "$keywords" | sed -e "s/$false_positive_pattern/,/g")
        fi
        old_keywords=$(calibredb show_metadata "$calibre_id"  | grep "Tags" | awk -F: '{print $2}' | sed -e 's/^ *//' | sed -e 's/ *$//' | sed -e 's/, /,/g' )
        echo "Tags old: >$old_keywords<"
        echo "Tags new: >$keywords<"
        if [ "$old_keywords" != "$keywords" ]; then
          calibredb set_metadata --field tags:"$keywords" "$calibre_id"
        fi
      fi
      # fi
    # fi
  done
}

echo "finished"

cleanup

exit 0
