#!/bin/bash

##
#
# Durchsucht die vorhandenen false_positive Dateien und testet sie erneut
#
# tools/test_potentially_false_positive "TestModus" "PfadZumCalibreVerzeichnisOderUnterverzeichnis"
#
##

# Absolute path to this script, e.g. /home/user/bin/foo.sh
script=$(readlink -f "$0")
# Absolute path this script is in, thus /home/user/bin
script_path=$(dirname "$script")

cfg_log_level=$(look log_level "$script_path"/main.cfg | cut -d '=' -f 2-)
. "$script_path/libraries/logging.sh" "$cfg_log_level"

# script_name=$(basename "$script")

# category_separator=$(look category_separator "$script_path"/main.cfg | cut -d '=' -f 2-)

library_path="$2"
test_mode="$1"

if [[ -z $library_path ]] || [[ -z $test_mode ]]; then
  echo "Benutzung: $script_name \"test_mode\" \"PfadZurCalibreDBOderUnterverzeichnis\""
  echo -e "test_mode:\t1 - Schlüsselwörter aus \"false_positive\" abfragen."
  echo -e "test_mode:\t2 - Schlüsselwörter mit Rückfrage aus \"false_positive\" entfernen, die nicht mehr gefunden werden können."
  echo -e "test_mode:\t3 - Schlüsselwörter ohne Rückfrage aus \"false_positive\" entfernen, die nicht mehr gefunden werden können."
  exit 1
fi

pdf_files=$(find "$library_path" -type f -name "*.pdf")
while read -r pdf_path; do
  working_path=$(dirname "$pdf_path")

  metadata_file="$working_path/metadata.opf"
  calibre_id=$(xpath -q -e "//package/metadata/dc:identifier[@id='calibre_id']/text()" "$metadata_file")

  false_positive_files=$(find "$script_path/false_positive" -type f -name "*.pattern" -exec grep -q "^$calibre_id=" {} \; -print)

  if [[ ! -z $false_positive_files ]]; then
    logInfo "$working_path"
    while read -r false_positive_file; do
      entries=$(sed -e '/^ *#/d' "$false_positive_file" | grep "^$calibre_id=")
      while read -r entry; do
        if [[ ! -z "$entry" ]]; then
          stripped_entry=$(sed -e 's/\^//g' <<< "$entry" | sed -e 's/(//g' | sed -e 's/)//g' | sed -e 's/\$//g' | sed -e 's/\\\././g')

          category_and_keyword=$(gawk  -F '=' '{print $2}' <<< "$stripped_entry")

          result=$("$script_path/tools/split_category_and_keyword" "$category_and_keyword")

          keyword=$(grep "keyword" <<< "$result" | awk -F '\t' '{print $2}' | sed -e 's/[]\/$*.^|[]/\\&/g')
          escaped_pattern=$(sed -e 's/[]\/$*.^|[]/\\&/g' <<< "$entry")

          if [[ $test_mode == "1" ]]; then

            hr_txt_path=${pdf_path//.pdf/.human-readable.txt}
            txt_path=${pdf_path//.pdf/.txt}

            egrep -anET -C 5 "[[:space:]]$keyword[[:space:]]" "$txt_path"
            echo "Folgende Aktionen sind für den Eintrag \"$entry\" in \"$false_positive_file\" möglich:"
            echo "1) Nichts tun"
            echo "2) Schlüsselwort wieder erlauben und Aktualisierung durchführen"
            echo "3) Schlüsselwort wieder erlauben, aber keine Aktualisierung durchführen"
            echo "4) PDF ansehen \"$pdf_path\""
            echo "5) Original TXT ansehen \"$hr_txt_path\""
            echo "6) Gekürzten TXT ansehen \"$txt_path\""
            echo "7) Verzeichnis öffnen \"$working_path\""
            echo "8) Nichts tun"
            while true; do
              read -p "Bitte wählen: " input < /dev/tty
              case $input in
                  [1]* )
                    break;;
                  [2]* )
                    sed -i "/^$escaped_pattern\$/d" "$false_positive_file"
                    extract_and_write_keywords_into_calibre "$working_path"
                    logDebug "\"$keyword\" für Calibre-ID \"$calibre_id\" wieder möglich: \"$entry\" aus \"$false_positive_file\" entfernt."
                    break;;
                  [3]* )
                    sed -i "/^$escaped_pattern\$/d" "$false_positive_file"
                    logDebug "\"$keyword\" für Calibre-ID \"$calibre_id\" wieder möglich: \"$entry\" aus \"$false_positive_file\" entfernt."
                    break;;
                  [4]* )
                    echo "Öffne \"$pdf_path\""
                    check_evince=$(command -v evince)
                    if [[ ! -z $check_evince ]]; then
                      evince "$pdf_path" --find="$keyword" > /dev/null 2>&1 &
                    else
                      xdg-open "$pdf_path" > /dev/null 2>&1 &
                    fi
                    ;;
                  [5]* )
                    echo "Öffne \"$hr_txt_path\""
                    xdg-open "$hr_txt_path" > /dev/null 2>&1 &
                    ;;
                  [6]* )
                    echo "Öffne \"$txt_path\""
                    xdg-open "$txt_path" > /dev/null 2>&1 &
                    ;;
                  [7]* )
                    echo "Öffne \"$working_path\""
                    xdg-open "$working_path" > /dev/null 2>&1 &
                    ;;
                  [8]* ) break;;
                  * ) echo "Ungültige Auswahl";;
              esac
            done
          elif [[ $test_mode == "2" ]] || [[ $test_mode == "3" ]]; then
            false_positive_pattern=$(grep "^$calibre_id=" "$false_positive_file" | gawk  -F "$calibre_id=" '{print $2}')
            if [[ ! -z $false_positive_pattern ]]; then
              logDebug "$false_positive_file"
              logDebug "$entry"
              keywords=$("$script_path/create_railroad_keywords_from_pdf" run "${false_positive_file//false_positive/pattern}" "$pdf_path")
              
              grep_result=$(sort <<< "$keywords" | uniq | grep -oE "$false_positive_pattern")
              if [[ -z $grep_result ]]; then
                if [[ $test_mode == "2" ]]; then
                  echo "Der Eintrag \"$entry\" in \"$false_positive_file\" ist überflüssig, entfernen?"
                  echo "n) Nein, nichts tun"
                  echo "j) Ja, \"$entry\" aus \"$false_positive_file\" entfernen"
                  while true; do
                    read -p "Bitte wählen: " input < /dev/tty
                    case $input in
                        n* )
                          break;;
                        j* )
                          sed -i "/^$escaped_pattern\$/d" "$false_positive_file"
                          logInfo "\"$entry\" aus \"$false_positive_file\" entfernt."
                          break;;
                        * ) echo "Ungültige Auswahl";;
                    esac
                  done
                elif [[ $test_mode == "3" ]]; then
                  sed -i "/^$escaped_pattern\$/d" "$false_positive_file"
                  logDebug "\"$entry\" aus \"$false_positive_file\" entfernt."
                fi
              fi
            fi
          else
            true
          fi
        fi
      done <<< "$entries"
    done <<< "$false_positive_files"
  fi

done <<< "$pdf_files"

exit 0
